on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

name: Rust

jobs:
  test-native:
    name: Test Native
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        run: cargo test --workspace

  check-wasm:
    name: Check Wasm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install wasm toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Rust cargo check
        run: RUSTFLAGS=--cfg=web_sys_unstable_apis cargo check --all-targets --workspace --target wasm32-unknown-unknown

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          components: rustfmt

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo clippy
        run: cargo fmt --all --check

  lint-native:
    name: Lints native
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          components: clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo clippy
        run: cargo clippy --all-targets --all-features --workspace -- -D warnings

  lint-wasm:
    name: Clippy wasm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          components: clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo clippy
        run: RUSTFLAGS='--cfg getrandom_backend="wasm_js"' cargo clippy --all-targets --workspace --exclude sf-server --target wasm32-unknown-unknown -- -D warnings
